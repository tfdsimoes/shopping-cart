package xyz.lana.lanaserver.mapper;

import org.junit.jupiter.api.Test;
import xyz.lana.lanaserver.dto.CartDTO;
import xyz.lana.lanaserver.dto.CartProductDTO;
import xyz.lana.lanaserver.entity.Cart;
import xyz.lana.lanaserver.entity.CartProduct;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class CartMapperTest {

    @Test
    public void cartToCartDTOTest() {
        Cart cart = buildCart();

        CartDTO cartDTO = CartMapper.INSTANCE.CartToCartDTO(cart);

        assertCartWithCartDTO(cart, cartDTO);
    }

    /**
     * Assert that CartDTO have the same values as Cart
     *
     * @param cart    {@link Cart} Original object
     * @param cartDTO {@link CartDTO} Object generated by the mapper
     */
    private void assertCartWithCartDTO(Cart cart, CartDTO cartDTO) {
        assertEquals(cart.getId(), cartDTO.getId(), "Id is different");
        assertEquals(cart.getAmount(), cartDTO.getAmount(), "Amount is not the same");

        for (int i = 0; i < cart.getProducts().size(); i++) {
            CartProduct cartProduct = cart.getProducts().get(i);
            CartProductDTO cartProductDTO = cartDTO.getProducts().get(i);

            CartProductMapperTest.assertCartProductWithCartProductDTO(cartProduct, cartProductDTO);
        }
    }

    /**
     * Generates a random Cart
     *
     * @return Object generated
     */
    private Cart buildCart() {
        Cart cart = new Cart();

        List<CartProduct> cartProducts = new ArrayList<>();
        cartProducts.add(CartProductMapperTest.buildProductCart());
        cartProducts.add(CartProductMapperTest.buildProductCart());
        cartProducts.add(CartProductMapperTest.buildProductCart());

        cart.setProducts(cartProducts);
        cart.setAmount(BigDecimal.ONE);

        return cart;
    }
}
